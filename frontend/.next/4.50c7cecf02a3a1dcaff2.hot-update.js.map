{"version":3,"file":"4.50c7cecf02a3a1dcaff2.hot-update.js","sources":["webpack:///src/components/charts/VegaChart.js"],"sourcesContent":["import React from \"react\";\nimport Vega from 'react-vega';\n\n\nlet spec = {\n    \"$schema\": \"https://vega.github.io/schema/vega/v3.0.json\",\n    \"width\": 500,\n    \"height\": 200,\n    // \"padding\": {left: 5, right: 5, top: 5, bottom: 5},\n\n    \"data\": [],\n\n    \"signals\": [\n        {\n            \"name\": \"tooltip\",\n            \"value\": {},\n            \"on\": [\n                {\"events\": \"rect:mouseover\", \"update\": \"datum\"},\n                {\"events\": \"rect:mouseout\", \"update\": \"{}\"}\n            ]\n        }\n    ],\n\n    \"scales\": [\n        {\n            \"name\": \"xscale\",\n            \"type\": \"band\",\n            \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n            \"range\": \"width\"\n        },\n        {\n            \"name\": \"yscale\",\n            \"domain\": {\"data\": \"table\", \"field\": \"amount\"},\n            \"nice\": true,\n            \"range\": \"height\"\n        }\n    ],\n\n    \"axes\": [\n        {\"orient\": \"bottom\", \"scale\": \"xscale\"},\n        {\"orient\": \"left\", \"scale\": \"yscale\"}\n    ],\n\n    \"marks\": [\n        {\n            \"type\": \"rect\",\n            \"from\": {\"data\": \"table\"},\n            \"encode\": {\n                \"enter\": {\n                    \"x\": {\"scale\": \"xscale\", \"field\": \"category\", \"offset\": 10},\n                    \"width\": {\"scale\": \"xscale\", \"band\": 0.5, \"offset\": -1},\n                    \"y\": {\"scale\": \"yscale\", \"field\": \"amount\"},\n                    \"y2\": {\"scale\": \"yscale\", \"value\": 0}\n                },\n                \"update\": {\n                    \"fill\": {\"value\": \"green\"}\n                },\n                \"hover\": {\n                    \"fill\": {\"value\": \"yellow\"}\n                }\n            }\n        },\n        {\n            \"type\": \"text\",\n            \"encode\": {\n                \"enter\": {\n                    \"align\": {\"value\": \"center\"},\n                    \"baseline\": {\"value\": \"bottom\"},\n                    \"fill\": {\"value\": \"#333\"}\n                },\n                \"update\": {\n                    \"x\": {\"scale\": \"xscale\", \"signal\": \"tooltip.category\", \"band\": 0.5},\n                    \"y\": {\"scale\": \"yscale\", \"signal\": \"tooltip.amount\", \"offset\": -2},\n                    \"text\": {\"signal\": \"tooltip.amount\"},\n                    \"fillOpacity\": [\n                        {\"test\": \"datum === tooltip\", \"value\": 0},\n                        {\"value\": 1}\n                    ]\n                }\n            }\n        }\n    ]\n};\n\nclass VegaChart extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            spec: ''\n        };\n        console.log(spec);\n    }\n\n    componentDidMount() {\n        this.updateChart();\n    }\n    componentWillUpdate() {\n        if(this.props.randomise){\n            this.props.changeRandomise(false);\n            this.updateChart()\n        }\n    }\n    // componentWillReceiveProps(){\n    //     console.log(this.props);\n    //\n    // }\n\n    updateChart = () => {\n        this.generateData().then(data => {\n            spec.data = data;\n            this.setState({spec: spec})\n        });\n    };\n\n    generateData = async () => {\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n        let table = [];\n        for (let i = 0; i < 20; i++) {\n            table.push({\"category\": possible.charAt(i), \"amount\": Math.floor(Math.random() * 100) + 10});\n        }\n        return [{\n            \"name\": \"table\",\n            \"values\": table\n        }];\n    };\n\n    handleHover = (...args) => {\n        console.log(\"aaaaa\");\n        console.log(args);\n    };\n\n\n    render() {\n        return (\n            <div>\n                {this.state.spec && <Vega spec={this.state.spec}/>}\n            </div>\n        )\n            ;\n\n\n    };\n}\n\nexport default VegaChart;\n\n\n\n// WEBPACK FOOTER //\n// src/components/charts/VegaChart.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAUA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAVA;AAHA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AANA;AANA;AAFA;AA1DA;AACA;AA+EA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AACA;AA7CA;AAEA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA2BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;AA5DA;AACA;AA8DA;;;;;;;;;;;;;;AA/IA;AAgFA;;;;;;;;;;A","sourceRoot":""}